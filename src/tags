!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
CALL_CH	include/libchain/chain.h	310;"	d
CALL_CHANNEL	include/libchain/chain.h	267;"	d
CH	include/libchain/chain.h	300;"	d
CHAIN_H	include/libchain/chain.h	2;"	d
CHANNEL	include/libchain/chain.h	247;"	d
CHANNEL_WT	include/libchain/chain.h	243;"	d
CHAN_FIELD	include/libchain/chain.h	126;"	d
CHAN_FIELD_ARRAY	include/libchain/chain.h	127;"	d
CHAN_IN1	include/libchain/chain.h	352;"	d
CHAN_IN2	include/libchain/chain.h	355;"	d
CHAN_IN3	include/libchain/chain.h	359;"	d
CHAN_IN4	include/libchain/chain.h	364;"	d
CHAN_IN5	include/libchain/chain.h	370;"	d
CHAN_NAME_SIZE	include/libchain/chain.h	12;"	d
CHAN_OUT1	include/libchain/chain.h	383;"	d
CHAN_OUT2	include/libchain/chain.h	386;"	d
CHAN_OUT3	include/libchain/chain.h	390;"	d
CHAN_OUT4	include/libchain/chain.h	395;"	d
CHAN_OUT5	include/libchain/chain.h	401;"	d
CHAN_TYPE_CALL	include/libchain/chain.h	/^		CHAN_TYPE_CALL,$/;"	e	enum:__anon1
CHAN_TYPE_GLOBAL	include/libchain/chain.h	/^    CHAN_TYPE_GLOBAL,$/;"	e	enum:__anon1
CHAN_TYPE_MULTICAST	include/libchain/chain.h	/^    CHAN_TYPE_MULTICAST,$/;"	e	enum:__anon1
CHAN_TYPE_RETURN	include/libchain/chain.h	/^    CHAN_TYPE_RETURN,$/;"	e	enum:__anon1
CHAN_TYPE_SELF	include/libchain/chain.h	/^    CHAN_TYPE_SELF,$/;"	e	enum:__anon1
CHAN_TYPE_T2T	include/libchain/chain.h	/^    CHAN_TYPE_T2T,$/;"	e	enum:__anon1
CH_TH	include/libchain/chain.h	298;"	d
CH_TYPE	include/libchain/chain.h	107;"	d
ENTRY_TASK	include/libchain/chain.h	200;"	d
FIELD_COUNT	include/libchain/chain.h	223;"	d
FIELD_COUNT_INNER	include/libchain/chain.h	222;"	d
FIELD_INIT_thread_array	thread.c	22;"	d	file:
FIELD_TYPE	include/libchain/chain.h	90;"	d
GLOBAL_CHANNEL	include/libchain/chain.h	255;"	d
GLOBAL_FIELD_TYPE	include/libchain/chain.h	101;"	d
INIT_FUNC	include/libchain/chain.h	214;"	d
LIBCHAIN_PRINTF	chain.c	5;"	d	file:
LIBCHAIN_PRINTF	chain.c	8;"	d	file:
LIBCHAIN_REPEAT_H	include/libchain/repeat.h	2;"	d
MAX_DIRTY_SELF_FIELDS	include/libchain/chain.h	14;"	d
MAX_NUM_THREADS	thread.c	9;"	d	file:
MC_IN_CH	include/libchain/chain.h	337;"	d
MC_OUT_CH	include/libchain/chain.h	338;"	d
MULTICAST_CHANNEL	include/libchain/chain.h	294;"	d
NUM_CHANS	include/libchain/chain.h	341;"	d
REPEAT	include/libchain/repeat.h	20;"	d
REPEAT0	include/libchain/repeat.h	4;"	d
REPEAT1	include/libchain/repeat.h	5;"	d
REPEAT1024	include/libchain/repeat.h	15;"	d
REPEAT128	include/libchain/repeat.h	12;"	d
REPEAT16	include/libchain/repeat.h	9;"	d
REPEAT2	include/libchain/repeat.h	6;"	d
REPEAT2048	include/libchain/repeat.h	16;"	d
REPEAT256	include/libchain/repeat.h	13;"	d
REPEAT32	include/libchain/repeat.h	10;"	d
REPEAT4	include/libchain/repeat.h	7;"	d
REPEAT4096	include/libchain/repeat.h	17;"	d
REPEAT512	include/libchain/repeat.h	14;"	d
REPEAT64	include/libchain/repeat.h	11;"	d
REPEAT8	include/libchain/repeat.h	8;"	d
REPEAT_INNER	include/libchain/repeat.h	19;"	d
RETURN_CHANNEL	include/libchain/chain.h	281;"	d
RET_CH	include/libchain/chain.h	313;"	d
RET_CHANNEL	include/libchain/chain.h	270;"	d
SELF_CH	include/libchain/chain.h	301;"	d
SELF_CHANNEL	include/libchain/chain.h	251;"	d
SELF_CHAN_FIELD	include/libchain/chain.h	128;"	d
SELF_CHAN_FIELD_ARRAY	include/libchain/chain.h	129;"	d
SELF_CHAN_IDX_BIT_CURRENT	include/libchain/chain.h	81;"	d
SELF_CHAN_IDX_BIT_DIRTY_CURRENT	include/libchain/chain.h	79;"	d
SELF_CHAN_IDX_BIT_DIRTY_NEXT	include/libchain/chain.h	80;"	d
SELF_CHAN_IDX_BIT_NEXT	include/libchain/chain.h	82;"	d
SELF_FIELDS_INITIALIZER	include/libchain/chain.h	240;"	d
SELF_FIELDS_INITIALIZER_INNER	include/libchain/chain.h	239;"	d
SELF_FIELD_ARRAY_INITIALIZER	include/libchain/chain.h	237;"	d
SELF_FIELD_INITIALIZER	include/libchain/chain.h	235;"	d
SELF_FIELD_META_INITIALIZER	include/libchain/chain.h	234;"	d
SELF_FIELD_TYPE	include/libchain/chain.h	95;"	d
SELF_IN_CH	include/libchain/chain.h	304;"	d
SELF_OUT_CH	include/libchain/chain.h	305;"	d
TASK	include/libchain/chain.h	163;"	d
TASK_NAME_SIZE	include/libchain/chain.h	11;"	d
TASK_REF	include/libchain/chain.h	167;"	d
TASK_SYM_NAME	include/libchain/chain.h	146;"	d
TRANSITION_TO	include/libchain/chain.h	412;"	d
VAR_TYPE	include/libchain/chain.h	84;"	d
_THREAD_H	include/libchain/thread.h	7;"	d
_chan_diag_t	include/libchain/chain.h	/^typedef struct _chan_diag_t {$/;"	s
_chan_meta_t	include/libchain/chain.h	/^typedef struct _chan_meta_t {$/;"	s
_context_t	include/libchain/chain.h	/^typedef struct _context_t {$/;"	s
_global_field_meta_t	include/libchain/chain.h	/^typedef struct _global_field_meta_t{$/;"	s
_numBoots	chain.c	/^__nv volatile unsigned _numBoots = 0;$/;"	v
_self_field_meta_t	include/libchain/chain.h	/^typedef struct _self_field_meta_t {$/;"	s
_var_meta_t	include/libchain/chain.h	/^typedef struct _var_meta_t {$/;"	s
_void_type_t	chain.c	/^struct _void_type_t {$/;"	s	file:
active	thread.c	/^    unsigned active;$/;"	m	struct:thread_state_t	file:
chain_time_t	include/libchain/chain.h	/^typedef unsigned chain_time_t;$/;"	t
chan_diag_t	include/libchain/chain.h	/^} chan_diag_t;$/;"	t	typeref:struct:_chan_diag_t
chan_in	chain.c	/^void *chan_in(const char *field_name, size_t var_size, int count, ...)$/;"	f
chan_meta_t	include/libchain/chain.h	/^} chan_meta_t;$/;"	t	typeref:struct:_chan_meta_t
chan_out	chain.c	/^void chan_out(const char *field_name, const void *value,$/;"	f
chan_type_t	include/libchain/chain.h	/^} chan_type_t;$/;"	t	typeref:enum:__anon1
context	include/libchain/thread.h	/^    context_t context;$/;"	m	struct:thread_t
context_t	include/libchain/chain.h	/^} context_t;$/;"	t	typeref:struct:_context_t
curctx	chain.c	/^__nv context_t * volatile curctx = get_cur_ctx();$/;"	v
curtime	chain.c	/^__nv chain_time_t volatile curtime = 0;$/;"	v
dest_name	include/libchain/chain.h	/^    char dest_name[CHAN_NAME_SIZE];$/;"	m	struct:_chan_diag_t
diag	include/libchain/chain.h	/^    chan_diag_t diag;$/;"	m	struct:_chan_meta_t
dirty_self_fields	include/libchain/chain.h	/^    self_field_meta_t *dirty_self_fields[MAX_DIRTY_SELF_FIELDS];$/;"	m	struct:__anon2
field_mask_t	include/libchain/chain.h	/^typedef uint16_t field_mask_t;$/;"	t
func	include/libchain/chain.h	/^    task_func_t *func;$/;"	m	struct:__anon2
get_current_thread	thread.c	/^thread_t *get_current_thread() {$/;"	f
global_field_meta_t	include/libchain/chain.h	/^} global_field_meta_t; $/;"	t	typeref:struct:_global_field_meta_t
idx	include/libchain/chain.h	/^    task_idx_t idx;$/;"	m	struct:__anon2
idx_pair	include/libchain/chain.h	/^    unsigned idx_pair;$/;"	m	struct:_self_field_meta_t
last_execute_time	include/libchain/chain.h	/^    volatile chain_time_t last_execute_time; \/\/ to execute prologue only once$/;"	m	struct:__anon2
main	chain.c	/^int main() {$/;"	f
mask	include/libchain/chain.h	/^    task_mask_t mask;$/;"	m	struct:__anon2
name	include/libchain/chain.h	/^    char name[TASK_NAME_SIZE];$/;"	m	struct:__anon2
next_ctx	include/libchain/chain.h	/^    struct _context_t *next_ctx;$/;"	m	struct:_context_t	typeref:struct:_context_t::_context_t
num_dirty_self_fields	include/libchain/chain.h	/^    volatile unsigned num_dirty_self_fields;$/;"	m	struct:__anon2
scheduler_init	thread.c	/^void scheduler_init(){$/;"	f
scheduler_task	thread.c	/^void scheduler_task() {$/;"	f
self_field_meta_t	include/libchain/chain.h	/^} self_field_meta_t;$/;"	t	typeref:struct:_self_field_meta_t
source_name	include/libchain/chain.h	/^    char source_name[CHAN_NAME_SIZE];$/;"	m	struct:_chan_diag_t
task	include/libchain/chain.h	/^    task_t *task;$/;"	m	struct:_context_t
task_func_t	include/libchain/chain.h	/^typedef void (task_func_t)(void);$/;"	t
task_idx_t	include/libchain/chain.h	/^typedef unsigned task_idx_t;$/;"	t
task_mask_t	include/libchain/chain.h	/^typedef uint32_t task_mask_t;$/;"	t
task_prologue	chain.c	/^void task_prologue()$/;"	f
task_t	include/libchain/chain.h	/^} task_t;$/;"	t	typeref:struct:__anon2
test	include/libchain/chain.h	/^		unsigned test; $/;"	m	struct:_global_field_meta_t
thread	thread.c	/^    thread_t thread;$/;"	m	struct:thread_state_t	file:
thread_array	thread.c	/^struct thread_array {$/;"	s	file:
thread_create	thread.c	/^int thread_create(task_t *new_task) {$/;"	f
thread_end	thread.c	/^void thread_end() {$/;"	f
thread_id	include/libchain/thread.h	/^    unsigned thread_id;$/;"	m	struct:thread_t
thread_init	thread.c	/^void thread_init() {$/;"	f
thread_state_t	thread.c	/^typedef struct thread_state_t {$/;"	s	file:
thread_state_t	thread.c	/^} thread_state_t;$/;"	t	typeref:struct:thread_state_t	file:
thread_t	include/libchain/thread.h	/^typedef struct thread_t {$/;"	s
thread_t	include/libchain/thread.h	/^} thread_t;$/;"	t	typeref:struct:thread_t
time	include/libchain/chain.h	/^    chain_time_t time;$/;"	m	struct:_context_t
timestamp	include/libchain/chain.h	/^    chain_time_t timestamp;$/;"	m	struct:_var_meta_t
transition_to	chain.c	/^void transition_to(task_t *next_task)$/;"	f
type	include/libchain/chain.h	/^    chan_type_t type;$/;"	m	struct:_chan_meta_t
var_meta_t	include/libchain/chain.h	/^} var_meta_t;$/;"	t	typeref:struct:_var_meta_t
void_type_t	chain.c	/^typedef struct _void_type_t void_type_t;$/;"	t	typeref:struct:_void_type_t	file:
x	chain.c	/^    void * x;$/;"	m	struct:_void_type_t	file:
